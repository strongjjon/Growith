;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <delay.h>
;
;#define       Laser         PORTB.0
;
;unsigned int Yaw_angle=85;      //영상기준 -는 좌
;unsigned int Pitch_angle=95;    //영상기준 -는 업
;
;//=====통신중 수신받은 코드 값 저장
;unsigned char PcData=0;
;
;//=====서보모터 좌우
;void Servo_Yaw(int angle_Yaw){ // angle : -90도 ~ +90도
; 0000 000E void Servo_Yaw(int angle_Yaw){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000F int PB5;
; 0000 0010 angle_Yaw=angle_Yaw-90;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;	angle_Yaw -> Y+2
;	PB5 -> R16,R17
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0011 if(angle_Yaw<-85)angle_Yaw=-88;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0012 if(angle_Yaw> 85)angle_Yaw= 88;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0013  PB5=(angle_Yaw+ 90)*20 +1500;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0014  OCR1A=PB5; //PB5
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0015 }
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;//=====서보모터 상하
;void Servo_Pitch(int angle_Pitch){ // angle : -90도 ~ +90도
; 0000 0017 void Servo_Pitch(int angle_Pitch){
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0018 int PB6;
; 0000 0019 angle_Pitch=angle_Pitch-90;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;	angle_Pitch -> Y+2
;	PB6 -> R16,R17
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 001A if(angle_Pitch<-85)angle_Pitch=-88;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 001B if(angle_Pitch> 85)angle_Pitch= 88;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 001C  PB6=(angle_Pitch+ 90)*20 +1500;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 001D  OCR1B=PB6; //PB6
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 001E }
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;
;//=============USART0
;interrupt [USART0_RXC] void usart0_rx_isr(void)
; 0000 0022 {
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0023     PcData=UDR0;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0024 }
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;//==============
;void Set_INI(void)
; 0000 0027 {
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0028 Servo_Yaw(Yaw_angle);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0029 Servo_Pitch(Pitch_angle);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 002A Laser = 0;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 002B 
; 0000 002C delay_ms(1000);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 002D }
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;
;//==============
;// Main Routinue
;void main(void){
; 0000 0031 void main(void){
;PCODE: $00000066 VOL: 0
; 0000 0032 
; 0000 0033 DDRB=0xff;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0034 DDRE=0xfe; // PE3 out
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0035 
; 0000 0036 //서보모터
; 0000 0037 TCCR1A=0xAA; // FAST PWM
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0038 TCCR1B=0x1A; // 8분주=0.5usec
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0039 OCR1A=3000; // 1500usec=0도
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 003A OCR1B=3000; // 1500usec=0도
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 003B ICR1=47999; // 0.5usec*48000=24000usec=41.67Hz
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 003C 
; 0000 003D // UART0 initialization
; 0000 003E // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 003F // USART0 Receiver: On
; 0000 0040 // USART0 Transmitter: On
; 0000 0041 // USART0 Mode: Asynchronous
; 0000 0042 // USART0 Baud Rate: 9600
; 0000 0043 DDRE=0b11111110; // RXD0=PORTE.0=입력으로설정, TXD0=PORTE.1=출력으로설정
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0044 UCSR0A=0x00;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0045 UCSR0B=0x98;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0046 UCSR0C=0x06;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0047 UBRR0H=0x00;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0048 UBRR0L=0x67; //9600
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0049 
; 0000 004A Set_INI();
;PCODE: $00000081 VOL: 0
; 0000 004B // Global 인터럽트 인에이블
; 0000 004C #asm("sei")
;PCODE: $00000082 VOL: 0
; 0000 004D //========
; 0000 004E // 본문 시작
; 0000 004F //========
; 0000 0050     while(1){
;PCODE: $00000083 VOL: 0
; 0000 0051 
; 0000 0052         if(PcData=='L'){
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0053          Laser=0;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0054          Yaw_angle=Yaw_angle-1;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0055          Servo_Yaw(Yaw_angle);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0056          PcData=0;
;PCODE: $0000008E VOL: 0
; 0000 0057         }
; 0000 0058 
; 0000 0059         if(PcData=='R'){
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 005A          Laser=0;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 005B          Yaw_angle=Yaw_angle+1;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 005C          Servo_Yaw(Yaw_angle);
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 005D          PcData=0;
;PCODE: $0000009A VOL: 0
; 0000 005E         }
; 0000 005F 
; 0000 0060         if(PcData=='U'){
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0061          Laser=0;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0062          Pitch_angle=Pitch_angle-1;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0063          Servo_Pitch(Pitch_angle);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0064          PcData=0;
;PCODE: $000000A6 VOL: 0
; 0000 0065         }
; 0000 0066 
; 0000 0067         if(PcData=='D'){
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0068          Laser=0;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0069          Pitch_angle=Pitch_angle+1;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 006A          Servo_Pitch(Pitch_angle);
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 006B          PcData=0;
;PCODE: $000000B2 VOL: 0
; 0000 006C         }
; 0000 006D 
; 0000 006E         if(PcData=='S'){
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 006F          Laser=1;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 0070          delay_ms(500);
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0071          Laser=0;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0072          delay_ms(200);
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0073          PcData=0;
;PCODE: $000000C0 VOL: 0
; 0000 0074         }
; 0000 0075 
; 0000 0076     };
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0077 }
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
